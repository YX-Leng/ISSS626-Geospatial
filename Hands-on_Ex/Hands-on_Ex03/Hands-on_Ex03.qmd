---
title: "Hands-on Exercise 3"
author: "Leng Yi Xiu"
date: "Sep 07 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  message: false
  freeze: true
---

## Network Constrained Spatial Point Patterns Analysis

**Network constrained Spatial Point Patterns Analysis (NetSPAA)**Â is a collection of spatial point patterns analysis methods special developed for analysing spatial point event occurs on or alongside network. The spatial point event can be locations of traffic accident or childcare centre for example. The network, on the other hand can be a road network or river network.

In this hands-on exercise, we will be using appropriate functions of **spNetwork** Package:

-   to derive **network kernel density estimation (NKDE)**, and

-   to perform network G-function and k-function analysis

```{r}
pacman::p_load(sf, spNetwork, tmap, tidyverse)
```

## Data Import and Preparation

```{r}
network <- st_read(dsn="D:/2. SMU - MITB/Term 4/ISSS626 Geospatial/YX-Leng/ISSS626-Geospatial/Hands-on_Ex/Hands-on_Ex03/data/geospatial", 
                   layer="Punggol_St")
```

```{r}
childcare <- st_read(dsn="D:/2. SMU - MITB/Term 4/ISSS626 Geospatial/YX-Leng/ISSS626-Geospatial/Hands-on_Ex/Hands-on_Ex03/data/geospatial",
                     layer="Punggol_CC")
```

::: panel-tabset
## Childcare

```{r}
childcare
```

## Network

```{r}
network
```
:::

## Visualising the Geospatial Data

```{r}
plot(st_geometry(network))
plot(childcare,add=T,col='red',pch = 19)
```

```{r}
tmap_mode('view')
tm_shape(childcare) + 
  tm_dots() + 
  tm_shape(network) +
  tm_lines()
```

```{r}
tmap_mode('plot')
```

## Network KDE Analysis

### Preparing the lixels objects

```{r}
lixels <- lixelize_lines(network, 
                         700, 
                         mindist = 375)
```

### Generating line centre points

```{r}
samples <- lines_center(lixels) 
```

### Performing NKDE

```{r}
childcare <- st_zm(childcare)
```

```{r}
densities <- nkde(network, 
                  events = childcare,
                  w = rep(1, nrow(childcare)),
                  samples = samples,
                  kernel_name = "quartic",
                  bw = 300, 
                  div= "bw", 
                  method = "simple", 
                  digits = 1, 
                  tol = 1,
                  grid_shape = c(1,1), 
                  max_depth = 8,
                  agg = 5, 
                  sparse = TRUE,
                  verbose = FALSE)
```

ðŸ’¡Visualising NKDE:

```{r}
samples$density <- densities
lixels$density <- densities
```

ðŸ’¡Rescaling to help the mapping:

```{r}
samples$density <- samples$density*1000
lixels$density <- lixels$density*1000
```

```{r}
tmap_mode('view')
tm_shape(lixels)+
  tm_lines(col="density")+
tm_shape(childcare)+
  tm_dots()
tmap_mode('plot')
```

## **Network Constrained G- and K-Function Analysis**

In this section, we are going to perform complete spatial randomness (CSR) test by using *`kfunctions()`* of **spNetwork** package.

::: {.callout-tip appearance="simple"}
## Null Hypothesis

H0 = The observed spatial point events (i.e distribution of childcare centres) are uniformly distributed over a street network in Punggol Planning Area.
:::

::: {.callout-tip appearance="simple"}
If H0 is rejected, we may infer that the distribution of childcare centres are spatially interacting and dependent on each other; as a result, they may form nonrandom patterns.
:::

```{r}
kfun_childcare <- kfunctions(network, 
                             childcare,
                             start = 0, 
                             end = 1000, 
                             step = 50, 
                             width = 50, 
                             nsim = 50, 
                             resolution = 50,
                             verbose = FALSE, 
                             conf_int = 0.05)
```

```{r}
kfun_childcare$plotk
```
