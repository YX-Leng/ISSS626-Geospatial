{
  "hash": "40c1d5015e842758de767c99e371f278",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 1\"\nauthor: \"Leng Yi Xiu\"\ndate: \"Aug 25 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n---\n\n\n## **Getting Started**\n\nIn this hands-on exercise, two R packages will be used:\n\n-   **sf** for importing, managing, and processing geospatial data, and\n\n-   **tidyverse** for performing data science tasks such as importing, wrangling and visualising data.\n\nThe code chunk below is to check if sf, tmap and tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tmap, tidyverse)\n```\n:::\n\n\n## Importing Geospatial Data\n\nIn this section, we learn how to import geospatial data into R using *`st_read()`* of sf package.\n\n### Importing polygon feature data in shapefile format\n\nWhen the input geospatial data is in shapefile format, 2 arguments will be used: *`dsn`* to define the data path and *`layer`* to provide the shapefile name.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz = st_read(dsn = \"D:/2. SMU - MITB/Term 4/ISSS626 Geospatial/YX-Leng/ISSS626-Geospatial/Hands-on_Ex/Hands-on_Ex01/data/geospatial\", \n                  layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\2. SMU - MITB\\Term 4\\ISSS626 Geospatial\\YX-Leng\\ISSS626-Geospatial\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\nðŸ’¡There are a total of 323 multipolygon features and 15 fields in *`mpsz`* simple feature data frame.\n\nðŸ’¡Bounding box = x extend and y extend of the data.\n\n### Importing polyline feature data in shapefile form\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncyclingpath = st_read(dsn = \"D:/2. SMU - MITB/Term 4/ISSS626 Geospatial/YX-Leng/ISSS626-Geospatial/Hands-on_Ex/Hands-on_Ex01/data/geospatial\", \n                         layer = \"CyclingPathGazette\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `CyclingPathGazette' from data source \n  `D:\\2. SMU - MITB\\Term 4\\ISSS626 Geospatial\\YX-Leng\\ISSS626-Geospatial\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3138 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42644.17 ymax: 48948.15\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\nðŸ’¡There are a total of 2,558 features and 2 fields in *`cyclingpath`* linestring feature data frame.\n\n### Importing GIS data in kml format\n\nðŸ’¡Note that for kml format, the complete file path and the kml file extension is provided.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npreschool = st_read(\"D:/2. SMU - MITB/Term 4/ISSS626 Geospatial/YX-Leng/ISSS626-Geospatial/Hands-on_Ex/Hands-on_Ex01/data/geospatial/PreSchoolsLocation.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `D:\\2. SMU - MITB\\Term 4\\ISSS626 Geospatial\\YX-Leng\\ISSS626-Geospatial\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n## Checking the Content of a Simple Feature Data Frame\n\nIn this section, we learn different ways to retrieve information related to the content of a simple feature data frame.\n\n### Working with *`st_geometry()`*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_geometry(mpsz)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303...\n```\n\n\n:::\n:::\n\n\n### Working with *`glimpse()`*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mpsz)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 323\nColumns: 16\n$ OBJECTID   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, â€¦\n$ SUBZONE_NO <int> 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, â€¦\n$ SUBZONE_N  <chr> \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HILâ€¦\n$ SUBZONE_C  <chr> \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",â€¦\n$ CA_IND     <chr> \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",â€¦\n$ PLN_AREA_N <chr> \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",â€¦\n$ PLN_AREA_C <chr> \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",â€¦\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTâ€¦\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",â€¦\n$ INC_CRC    <chr> \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",â€¦\n$ FMEL_UPD_D <date> 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05â€¦\n$ X_ADDR     <dbl> 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,â€¦\n$ Y_ADDR     <dbl> 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,â€¦\n$ SHAPE_Leng <dbl> 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,â€¦\n$ SHAPE_Area <dbl> 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103â€¦\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (â€¦\n```\n\n\n:::\n:::\n\n\nðŸ’¡The *`glimpse()`* report reveals the data type of each field.\n\n### Working with *`head()`*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(mpsz, n=5) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n```\n\n\n:::\n:::\n\n\n## Plotting the Geospatial Data\n\nðŸ’¡Default plot: multi-plot of all attributes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(mpsz)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nðŸ’¡Plotting only the geometry\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(mpsz))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nðŸ’¡Plotting by using specific attribute(s)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(mpsz[\"PLN_AREA_N\"])\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Working with Projection\n\nIn this section, we learn how to project a simple feature data frame from one coordinate system to another coordinate system, process also known as **projection transformation**.\n\n### Assigning EPSG code to a simple feature data frame\n\nCommon issue that can happen during importing geospatial data into R is the coordinate system of the source data was either\n\n-   missing, or\n\n-   wrongly assigned during the importing process.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(mpsz)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n```\n\n\n:::\n:::\n\n\n::: callout-caution\nCode block indicates that EPSG is 9001, which is wrong. Correct EPSG code for svy21 should be **3414**.\n:::\n\nðŸ’¡Assigning the correct EPSG code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz3414 <- st_set_crs(mpsz, 3414)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: st_crs<- : replacing crs does not reproject data; use st_transform for\nthat\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(mpsz3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n```\n\n\n:::\n:::\n\n\n### Transforming the projection of preschool from wgs84 to svy21\n\nIt is common for us to transform the original data from geographic coordinated system to **projected** coordinated system because the former is not appropriate if the analysis needs to use distance and/or area measurements.\n\nðŸ’¡ Performing the projection transformation\n\n\n::: {.cell}\n\n```{.r .cell-code}\npreschool3414 <- st_transform(preschool, \n                              crs = 3414)\n```\n:::\n\n\n## Importing and Converting an Aspatial Data\n\nIn this section, we learn how to import an aspatial data into R environment and save it as a **tibble data frame**, then converting it into a simple feature data frame.\n\n### Importing the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlistings <- read_csv(\"D:/2. SMU - MITB/Term 4/ISSS626 Geospatial/YX-Leng/ISSS626-Geospatial/Hands-on_Ex/Hands-on_Ex01/data/aspatial/listings.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 3540 Columns: 75\nâ”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\nDelimiter: \",\"\nchr  (26): listing_url, source, name, description, neighborhood_overview, pi...\ndbl  (38): id, scrape_id, host_id, host_listings_count, host_total_listings_...\nlgl   (6): host_is_superhost, host_has_profile_pic, host_identity_verified, ...\ndate  (5): last_scraped, host_since, calendar_last_scraped, first_review, la...\n\nâ„¹ Use `spec()` to retrieve the full column specification for this data.\nâ„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlist(listings) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n# A tibble: 3,540 Ã— 75\n       id listing_url            scrape_id last_scraped source name  description\n    <dbl> <chr>                      <dbl> <date>       <chr>  <chr> <chr>      \n 1  71609 https://www.airbnb.coâ€¦   2.02e13 2024-06-29   previâ€¦ Ensuâ€¦ For 3 roomâ€¦\n 2  71896 https://www.airbnb.coâ€¦   2.02e13 2024-06-29   city â€¦ B&B â€¦ <NA>       \n 3  71903 https://www.airbnb.coâ€¦   2.02e13 2024-06-29   city â€¦ Roomâ€¦ Like your â€¦\n 4 275343 https://www.airbnb.coâ€¦   2.02e13 2024-06-29   city â€¦ 10miâ€¦ **IMPORTANâ€¦\n 5 275344 https://www.airbnb.coâ€¦   2.02e13 2024-06-29   city â€¦ 15 mâ€¦ Lovely homâ€¦\n 6 289234 https://www.airbnb.coâ€¦   2.02e13 2024-06-29   previâ€¦ Bookâ€¦ This wholeâ€¦\n 7 294281 https://www.airbnb.coâ€¦   2.02e13 2024-06-29   city â€¦ 5 miâ€¦ I have 3 bâ€¦\n 8 324945 https://www.airbnb.coâ€¦   2.02e13 2024-06-29   city â€¦ Comfâ€¦ **IMPORTANâ€¦\n 9 330095 https://www.airbnb.coâ€¦   2.02e13 2024-06-29   city â€¦ Relaâ€¦ **IMPORTANâ€¦\n10 344803 https://www.airbnb.coâ€¦   2.02e13 2024-06-29   city â€¦ Budgâ€¦ Direct busâ€¦\n# â„¹ 3,530 more rows\n# â„¹ 68 more variables: neighborhood_overview <chr>, picture_url <chr>,\n#   host_id <dbl>, host_url <chr>, host_name <chr>, host_since <date>,\n#   host_location <chr>, host_about <chr>, host_response_time <chr>,\n#   host_response_rate <chr>, host_acceptance_rate <chr>,\n#   host_is_superhost <lgl>, host_thumbnail_url <chr>, host_picture_url <chr>,\n#   host_neighbourhood <chr>, host_listings_count <dbl>, â€¦\n```\n\n\n:::\n:::\n\n\nðŸ’¡The output reveals a *`listing`* tibble data frame consisting of 3,540 row and 75 columns.\n\n### Creating a simple feature data frame from an aspatial data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlistings_sf <- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %>%\n  st_transform(crs = 3414)\n```\n:::\n\n\n::: {.callout-note appearance=\"simple\"}\n-   `coords` argument: provide the column name of the x-coordinates first, then the column name of the y-coordinates\n\n-   `crs` argument: provide the coordinates system in EPSG format\\\n    4326 = wgs84 Geographic Coordinate System\\\n    3414 = Singapore SVY21 Projected Coordinate System\n\n-   Search for other country's EPSG code by referring to epsg.io\n\n-   `%>%` used to nest `st_transform()`\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(listings_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3,540\nColumns: 74\n$ id                                           <dbl> 71609, 71896, 71903, 2753â€¦\n$ listing_url                                  <chr> \"https://www.airbnb.com/râ€¦\n$ scrape_id                                    <dbl> 2.024063e+13, 2.024063e+1â€¦\n$ last_scraped                                 <date> 2024-06-29, 2024-06-29, â€¦\n$ source                                       <chr> \"previous scrape\", \"city â€¦\n$ name                                         <chr> \"Ensuite Room (Room 1 & 2â€¦\n$ description                                  <chr> \"For 3 rooms.Book room 1 â€¦\n$ neighborhood_overview                        <chr> NA, NA, \"Quiet and view oâ€¦\n$ picture_url                                  <chr> \"https://a0.muscache.com/â€¦\n$ host_id                                      <dbl> 367042, 367042, 367042, 1â€¦\n$ host_url                                     <chr> \"https://www.airbnb.com/uâ€¦\n$ host_name                                    <chr> \"Belinda\", \"Belinda\", \"Beâ€¦\n$ host_since                                   <date> 2011-01-29, 2011-01-29, â€¦\n$ host_location                                <chr> \"Singapore\", \"Singapore\",â€¦\n$ host_about                                   <chr> \"Hi My name is Belinda -Hâ€¦\n$ host_response_time                           <chr> \"within an hour\", \"withinâ€¦\n$ host_response_rate                           <chr> \"100%\", \"100%\", \"100%\", \"â€¦\n$ host_acceptance_rate                         <chr> \"N/A\", \"N/A\", \"N/A\", \"99%â€¦\n$ host_is_superhost                            <lgl> FALSE, FALSE, FALSE, FALSâ€¦\n$ host_thumbnail_url                           <chr> \"https://a0.muscache.com/â€¦\n$ host_picture_url                             <chr> \"https://a0.muscache.com/â€¦\n$ host_neighbourhood                           <chr> \"Tampines\", \"Tampines\", \"â€¦\n$ host_listings_count                          <dbl> 6, 6, 6, 49, 49, 6, 7, 49â€¦\n$ host_total_listings_count                    <dbl> 11, 11, 11, 73, 73, 11, 8â€¦\n$ host_verifications                           <chr> \"['email', 'phone']\", \"['â€¦\n$ host_has_profile_pic                         <lgl> TRUE, TRUE, TRUE, TRUE, Tâ€¦\n$ host_identity_verified                       <lgl> TRUE, TRUE, TRUE, TRUE, Tâ€¦\n$ neighbourhood                                <chr> NA, NA, \"Singapore, Singaâ€¦\n$ neighbourhood_cleansed                       <chr> \"Tampines\", \"Tampines\", \"â€¦\n$ neighbourhood_group_cleansed                 <chr> \"East Region\", \"East Regiâ€¦\n$ property_type                                <chr> \"Private room in villa\", â€¦\n$ room_type                                    <chr> \"Private room\", \"Private â€¦\n$ accommodates                                 <dbl> 3, 1, 2, 1, 1, 4, 2, 1, 1â€¦\n$ bathrooms                                    <dbl> NA, 0.5, 0.5, 2.0, 2.5, Nâ€¦\n$ bathrooms_text                               <chr> \"1 private bath\", \"Sharedâ€¦\n$ bedrooms                                     <dbl> 2, 1, 1, 1, 1, 3, 2, 1, 1â€¦\n$ beds                                         <dbl> NA, 1, 2, 1, 1, NA, 1, 1,â€¦\n$ amenities                                    <chr> \"[\\\"Free parking on premiâ€¦\n$ price                                        <chr> NA, \"$80.00\", \"$80.00\", \"â€¦\n$ minimum_nights                               <dbl> 92, 92, 92, 180, 180, 92,â€¦\n$ maximum_nights                               <dbl> 365, 365, 365, 999, 999, â€¦\n$ minimum_minimum_nights                       <dbl> 92, 92, 92, 180, 180, 92,â€¦\n$ maximum_minimum_nights                       <dbl> 92, 92, 92, 180, 180, 92,â€¦\n$ minimum_maximum_nights                       <dbl> 1125, 1125, 1125, 1125, 1â€¦\n$ maximum_maximum_nights                       <dbl> 1125, 1125, 1125, 1125, 1â€¦\n$ minimum_nights_avg_ntm                       <dbl> 92, 92, 92, 180, 180, 92,â€¦\n$ maximum_nights_avg_ntm                       <dbl> 1125, 1125, 1125, 1125, 1â€¦\n$ calendar_updated                             <lgl> NA, NA, NA, NA, NA, NA, Nâ€¦\n$ has_availability                             <lgl> TRUE, TRUE, TRUE, TRUE, Tâ€¦\n$ availability_30                              <dbl> 30, 30, 30, 28, 0, 29, 30â€¦\n$ availability_60                              <dbl> 59, 53, 60, 58, 0, 58, 60â€¦\n$ availability_90                              <dbl> 89, 83, 90, 62, 0, 88, 90â€¦\n$ availability_365                             <dbl> 89, 148, 90, 62, 0, 88, 3â€¦\n$ calendar_last_scraped                        <date> 2024-06-29, 2024-06-29, â€¦\n$ number_of_reviews                            <dbl> 19, 24, 46, 20, 16, 12, 1â€¦\n$ number_of_reviews_ltm                        <dbl> 0, 0, 0, 0, 2, 0, 0, 1, 1â€¦\n$ number_of_reviews_l30d                       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0â€¦\n$ first_review                                 <date> 2011-12-19, 2011-07-30, â€¦\n$ last_review                                  <date> 2020-01-17, 2019-10-13, â€¦\n$ review_scores_rating                         <dbl> 4.44, 4.16, 4.41, 4.40, 4â€¦\n$ review_scores_accuracy                       <dbl> 4.37, 4.22, 4.39, 4.16, 4â€¦\n$ review_scores_cleanliness                    <dbl> 4.00, 4.09, 4.52, 4.26, 4â€¦\n$ review_scores_checkin                        <dbl> 4.63, 4.43, 4.63, 4.47, 4â€¦\n$ review_scores_communication                  <dbl> 4.78, 4.43, 4.64, 4.42, 4â€¦\n$ review_scores_location                       <dbl> 4.26, 4.17, 4.50, 4.53, 4â€¦\n$ review_scores_value                          <dbl> 4.32, 4.04, 4.36, 4.63, 4â€¦\n$ license                                      <chr> NA, NA, NA, \"S0399\", \"S03â€¦\n$ instant_bookable                             <lgl> FALSE, FALSE, FALSE, TRUEâ€¦\n$ calculated_host_listings_count               <dbl> 6, 6, 6, 49, 49, 6, 7, 49â€¦\n$ calculated_host_listings_count_entire_homes  <dbl> 0, 0, 0, 0, 0, 0, 1, 0, 0â€¦\n$ calculated_host_listings_count_private_rooms <dbl> 6, 6, 6, 49, 49, 6, 6, 49â€¦\n$ calculated_host_listings_count_shared_rooms  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0â€¦\n$ reviews_per_month                            <dbl> 0.12, 0.15, 0.29, 0.15, 0â€¦\n$ geometry                                     <POINT [m]> POINT (41972.5 3639â€¦\n```\n\n\n:::\n:::\n\n\n## Geoprocessing with sf package\n\nIn this section, we learn how to perform 2 commonly used geoprocessing functions, buffering and point in polygon count.\n\n### 1. Buffering\n\nðŸ’¡To compute a 5-meter buffer around existing cycling paths, calculate the area of the buffers and `sum()` of Base R to derive total land required.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbuffer_cycling <- st_buffer(cyclingpath, \n                               dist=5, nQuadSegs = 30)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbuffer_cycling$AREA <- st_area(buffer_cycling)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(buffer_cycling$AREA)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n2218855 [m^2]\n```\n\n\n:::\n:::\n\n\n### 2. Point in Polygon count\n\nðŸ’¡Identify pre-schools located inside each Planning Subzone using `st_intersects()`, then calculating number of pre-schools that fall inside each subzone using `length()` of Base R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz3414$`PreSch Count`<- lengths(st_intersects(mpsz3414, preschool3414))\n```\n:::\n\n\n::: callout-caution\nThis should not be confused with *`st_intersection()`*\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mpsz3414$`PreSch Count`)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n```\n\n\n:::\n:::\n\n\nðŸ’¡ List the planning subzone with the most number of pre-schools\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_n(mpsz3414, 1, `PreSch Count`)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n```\n\n\n:::\n:::\n\n\nðŸ’¡ Calculate the density of pre-schools by planning subzone\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz3414$Area <- mpsz3414 %>%\n  st_area()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz3414 <- mpsz3414 %>%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)\n```\n:::\n\n\n## Exploratory Data Analysis (EDA)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(mpsz3414$`PreSch Density`)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\nðŸ’¡ With customisation - ggplot2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n# Thematic Mapping and GeoVisualisation with R\n\nNote: **sf**, **tmap** and **tidyverse** packages have been installed in previous sections.\n\n## Importing Data into R\n\n### 1. Geospatial Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(dsn = \"D:/2. SMU - MITB/Term 4/ISSS626 Geospatial/YX-Leng/ISSS626-Geospatial/Hands-on_Ex/Hands-on_Ex01/data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\2. SMU - MITB\\Term 4\\ISSS626 Geospatial\\YX-Leng\\ISSS626-Geospatial\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n```\n\n\n:::\n:::\n\n\n### 2. Attribute Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata <- read_csv(\"D:/2. SMU - MITB/Term 4/ISSS626 Geospatial/YX-Leng/ISSS626-Geospatial/Hands-on_Ex/Hands-on_Ex01/data/aspatial/respopagesextod2011to2020.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 984656 Columns: 7\nâ”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nâ„¹ Use `spec()` to retrieve the full column specification for this data.\nâ„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n### 3. Data Preparation\n\nðŸ’¡ Before a thematic map can be prepared, a data table with Year 2020 values needs to be prepared. This data table should include variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.\n\n-   Data Wrangling\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[14])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+\nrowSums(.[15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n:::\n\n\n-   Joining the attribute and geospatial data\n\nðŸ’¡This is an extra step to convert values in PA and SZ to upper case, aligning it to values in SUBZONE_N and PLN_AREA_N.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n```\n:::\n\n\nðŸ’¡Join the geographic data and attribute table using planning subzone name.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_pop2020 <- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(mpsz_pop2020, \"D:/2. SMU - MITB/Term 4/ISSS626 Geospatial/YX-Leng/ISSS626-Geospatial/Hands-on_Ex/Hands-on_Ex01/data/rds/mpszpop2020.rds\")\n```\n:::\n\n\n## Choropleth Mapping Using *`tmap`*\n\nChoropleth mapping involves the symbolisation of enumeration units, such as countries, provinces, states, counties or census units, using area patterns or graduated colors.\n\nTwo approaches can be used to prepare thematic map using **tmap**, they are:\n\n-   Plotting a thematic map quickly by using *`qtm()`*.\n\n-   Plotting highly customisable thematic map by using tmap elements.\n\n### Plotting a choropleth map quickly with *`qtm()`*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\n::: {.callout-caution appearance=\"simple\"}\nThe disadvantge of *`qtm()`* is that it makes aesthetics of individual layers harder to control.\n\nTo draw a high quality cartographic choropleth map as shown in the figure below, *`tmap`*â€™s drawing elements should be used.\n:::\n\n### Creating a choropleth map using tmap's elements\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\ntm_fill(\"DEPENDENCY\",\nstyle = \"quantile\",\npalette = \"Blues\",\ntitle = \"Dependency ratio\") +\ntm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\nmain.title.position = \"center\",\nmain.title.size = 1.2,\nlegend.height = 0.45,\nlegend.width = 0.35,\nframe = TRUE) +\ntm_borders(alpha = 0.5) +\ntm_compass(type=\"8star\", size = 2) +\ntm_scale_bar() +\ntm_grid(alpha =0.2) +\ntm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\\\n and Population data from Department of Statistics DOS\",\nposition = c(\"left\", \"bottom\"))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\n#### Drawing a base map\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n#### Drawing a choropleth map using *`tm_polygons()`*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\n#### Drawing a choropleth map using *`tm_fill()`* and *`tm_border()`*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\n### Data Classification Methods of **tmap**\n\n**tmap** provides a total ten data classification methods, namely: *`fixed`*, *`sd`*, *`equal`*, *`pretty`* (default), *`quantile`*, *`kmeans`*, *`hclust`*, *`bclust`*, *`fisher`*, and *`jenks`*.\n\nðŸ’¡ To define a data classification method, the *style* argument of *`tm_fill()`* or *`tm_polygons()`* will be used.\n\n#### Plotting choropleth maps with built-in classification methods\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n\n::: callout-caution\nIn the above map, **equal data** classification method was used.\n\nMaps can lie! Prepare choropleth maps using different classification methods supported by *`tmap`* and compare their differences.\n:::\n\n#### Plotting choropleth map with custom break\n\nFor all the built-in styles, the category breaks are computed internally. In order to override these defaults, the breakpoints can be set explicitly by means of the *`breaks`* argument to the *`tm_fill()`*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mpsz_pop2020$DEPENDENCY)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 \n```\n\n\n:::\n:::\n\n\nðŸ’¡ With the results above, we set break point at 0.60, 0.70, 0.80 and 0.90. We also need to include minimum and maximum, which is set at 0 and 100. *`breaks`* vector is thus c(0, 0.60, 0.70, 0.80, 0.90, 1.00).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Values have found that are higher than the highest break\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\n### Colour Scheme\n\n#### Using ColourBrewer palette\n\nðŸ’¡ To change the colour, assign the preferred colour to *`palette`* argument\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n\nðŸ’¡ To reverse the order of the colour shading, add \"-\" prefix.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n\n### Map Layouts\n\n#### Map Legend\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n:::\n\n\n#### Map Style\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap style set to \"classic\"\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nother available styles are: \"white\", \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"watercolor\" \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-50-1.png){width=672}\n:::\n:::\n\n\n#### Cartogrphic Furniture\n\nðŸ’¡ *`tmap`* provides arguments to draw other map furniture (i.e. compass, scale bar and grid lines).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-51-1.png){width=672}\n:::\n:::\n\n\nðŸ’¡ To reset back to default style, set it back to \"white\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_style(\"white\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap style set to \"white\"\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n```\n\n\n:::\n:::\n\n\n### **Drawing Small Multiple Choropleth Maps (Facet Maps)**\n\nFacet maps are composed of many maps arrange side-by-side, and sometimes stacked vertically. Small multiple maps enable the visualisation of how spatial relationships change with respect to another variable, such as time.\n\nIn **tmap**, these can be plotted in 3 ways:\n\n-   by assigning multiple values to at least one of the asthetic arguments,\n\n-   by defining a group-by variable in *`tm_facets()`*, and\n\n-   by creating multiple stand-alone maps with *`tmap_arrange()`* .\n\n#### By assigning multiple values to at least one of the aesthetic arguments\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap style set to \"white\"\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-53-1.png){width=672}\n:::\n:::\n\n\nðŸ’¡ Notice the Blues and Greens\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n:::\n\n\n#### By defining a group-by variable in *`tm_facets()`*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes =TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The argument drop.shapes has been renamed to drop.units, and is\ntherefore deprecated\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-55-1.png){width=672}\n:::\n:::\n\n\n#### By creating multiple stand-alone maps with *`tmap_arrange()`*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyoungmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-56-1.png){width=672}\n:::\n:::\n\n\n### Mapping Spatial Object Meeting a Selection Criterion\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in pre_process_gt(x, interactive = interactive, orig_crs =\ngm$shape.orig_crs): legend.width controls the width of the legend within a map.\nPlease use legend.outside.size to control the width of the outside legend\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-57-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Hands-on_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}