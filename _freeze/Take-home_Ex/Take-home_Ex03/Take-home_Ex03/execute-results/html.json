{
  "hash": "2fb70a017924adbf4f6a0360ff39f6a2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 3: Modelling Geography of Financial Inclusion with Geographically Weighted Methods\"\nauthor: \"Leng Yi Xiu\"\ndate: \"Nov 2 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n---\n\n\n# 1 Overview\n\nTanzania is one of the Africaâ€™s fastest growing economies with nearly 7 percent annual national GDP growth since 2000. Despite the robust economic growth, widespread poverty persists. **Approximately 49% of Tanzaniaâ€™s population lives below the international extreme poverty line.** This could be due to the lack of financial inclusion - the availability and equality of opportunities to access financial services such as banking, loan, equity and insurance products.\n\n## 1.1 Objective\n\nThe objective of this exercise is to build an exploratory model that determines factors affecting financial inclusion by using **non-spatial regression** and **geographically weighted regression methods**.\n\nExamples of **independent** factors include demographics (rural vs urban), marital status, gender, financial education, access to technology etc.\n\nExamples of **dependent** factors include savings, financial situation, free access to banks, insurance coverage etc.\n\n------------------------------------------------------------------------\n\n# 2 Getting Started\n\nThe code chunk below installs and loads **olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary** packages into R environment:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)\n```\n:::\n\n\n------------------------------------------------------------------------\n\n# 3 Data Preparation\n\nFor the purpose of this exercise, we will be using two data sets:\n\n1.  District level boundary GIS data for Tanzania\n\n2.  FinScope Tanzania 2023 Survey results\n\n## 3.1 Importing data into R Environment\n\n::: panel-tabset\n## Geospatial\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGB = st_read(dsn = \"data/rawdata/geospatial\", layer = \"geoBoundaries-TZA-ADM2\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `geoBoundaries-TZA-ADM2' from data source \n  `D:\\2. SMU - MITB\\Term 4\\ISSS626 Geospatial\\YX-Leng\\ISSS626-Geospatial\\Take-home_Ex\\Take-home_Ex03\\data\\rawdata\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 170 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 29.58953 ymin: -11.76235 xmax: 40.44473 ymax: -0.983143\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nðŸ’¡ Updating CRS information\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(GB) <- 4210\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: st_crs<- : replacing crs does not reproject data; use st_transform for\nthat\n```\n\n\n:::\n\n```{.r .cell-code}\nGB <- st_transform(GB, crs = 32736)\nhead(GB, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 5 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 694340.1 ymin: 9563538 xmax: 992833.3 ymax: 9762474\nProjected CRS: WGS 84 / UTM zone 36S\n     shapeName shapeISO                 shapeID shapeGroup shapeType\n1       Arusha     <NA> 72390352B32479700182608        TZA      ADM2\n2 Arusha Urban     <NA> 72390352B90906351205470        TZA      ADM2\n3       Karatu     <NA> 72390352B22674606658861        TZA      ADM2\n4      Longido     <NA> 72390352B95731720096997        TZA      ADM2\n5         Meru     <NA> 72390352B99598192663387        TZA      ADM2\n                        geometry\n1 MULTIPOLYGON (((929196 9602...\n2 MULTIPOLYGON (((918731.5 96...\n3 MULTIPOLYGON (((814868.8 96...\n4 MULTIPOLYGON (((873372.8 96...\n5 MULTIPOLYGON (((929196 9602...\n```\n\n\n:::\n:::\n\n\n## Aspatial\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTanz_raw = read_csv(\"data/rawdata/aspatial/FinScope Tanzania 2023_Individual Main Data_FINAL.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 9915 Columns: 721\nâ”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\nDelimiter: \",\"\nchr (703): reg_name, dist_name, ward_code1, ward_name, ea_code, clustertype,...\ndbl  (13): SN, reg_code, dist_code, c8c, D6_1_1, D6_1_2, D6_1_3, gov_3, cmg4...\nlgl   (5): e_5_1, e_5_2, g_5_2__5, g_5_2__13, serv2_4\n\nâ„¹ Use `spec()` to retrieve the full column specification for this data.\nâ„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(Tanz_raw, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 Ã— 721\n     SN reg_name      reg_code dist_code dist_name ward_code1 ward_name ea_code\n  <dbl> <chr>            <dbl>     <dbl> <chr>     <chr>      <chr>     <chr>  \n1  4529 Mwanza              19         7 Misungwi  251        Mondo     004    \n2  4245 Kagera              18         7 Missenyi  011        Kakunyu   001    \n3  8149 Mbeya               12         3 Kyela     283        Nkuyu     301    \n4  6763 Dodoma               1         3 Kongwa    123        Kibaigwa  301    \n5  7805 Dar es Salaam        7         2 Ilala     252        Majohe    029    \n# â„¹ 713 more variables: clustertype <chr>, c1 <chr>, c2 <chr>, c7 <chr>,\n#   c8c <dbl>, c9 <chr>, c10 <chr>, c11 <chr>, c8n_a1 <chr>, c8n_a2 <chr>,\n#   c8n_b1 <chr>, c8n_b2 <chr>, c8n_c1 <chr>, c8n_c2 <chr>, c8n_d1 <chr>,\n#   c8n_d2 <chr>, c8n_e1 <chr>, c8n_e2 <chr>, c8n_f1 <chr>, c8n_f2 <chr>,\n#   c12_1 <chr>, c12_2 <chr>, c12_3 <chr>, c12_4 <chr>, c22 <chr>, c14 <chr>,\n#   c15 <chr>, C16 <chr>, c16_unit <chr>, c17_1__1 <chr>, c17_1__2 <chr>,\n#   c17_1__3 <chr>, c17_1__4 <chr>, c17_1__5 <chr>, c17_1__6 <chr>, â€¦\n```\n\n\n:::\n:::\n\n\nðŸ’¡ Count number of unique dist_name\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTanz_raw %>%\n  count(dist_name) %>%\n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 148 Ã— 2\n   dist_name      n\n   <chr>      <int>\n 1 Arumeru      105\n 2 Arusha        75\n 3 Babati       105\n 4 Bagamoyo      73\n 5 Bahi          45\n 6 Bariadi       75\n 7 Biharamulo    45\n 8 Buhigwe       45\n 9 Bukoba        74\n10 Bukombe       43\n# â„¹ 138 more rows\n```\n\n\n:::\n:::\n\n:::\n\n## 3.2 Geospatial: Converting Multipolygon to Polygon\n\nAs the district level boundary GIS data in multipolygon form will cause overlays or intersections, it is more intuitive to calculate the area of each polygon and group them together by the unique district name and then select the largest polygon by area.\n\nðŸ’¡ Calculate the area of each polygon\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsf_GB <- GB %>%\n  st_cast(\"POLYGON\") %>%\n  mutate(area = st_area(.))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in st_cast.sf(., \"POLYGON\"): repeating attributes for all\nsub-geometries for which they may not be constant\n```\n\n\n:::\n:::\n\n\nðŸ’¡ Group and select the largest polygon by area\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGB_clean <- sf_GB %>%\n  group_by(shapeName) %>%\n  filter(area == max(area)) %>%\n  ungroup() %>%\n  select(-area) %>%\n  select(shapeName)\n```\n:::\n\n\n## 3.3 Aspatial: Filtering columns for information required\n\nAs the FinScope Tanzania 2023 dataset contains 721 variables and not all variables will be used in our analysis, we will filter for the necessary independent and dependent variables based to analyse on:\n\n\\(a\\) how cluster type, gender and access to technology affects financial situation,\n\n\\(b\\) how cluster type, gender and access to technology affects savings, and\n\n\\(c\\) how cluster type, gender and access to technology affects insurance coverage for the Tanzanians.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTanz_filter <- Tanz_raw %>%\n  select(dist_name, clustertype, c9, c23__1,c23__2,c23__3,e_7_n_3,e_7_n_4,F4_4,ins2,Household_weight,population_wt)\n```\n:::\n\n\n## 3.4 Aspatial: Rename Columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTanz_filter <- Tanz_filter %>%\n  rename(\n    Gender = c9, \n    Access_MobilePhone = c23__1,\n    Access_Internet = c23__2,\n    Access_Computer = c23__3,\n    Savings_Emerg = e_7_n_3,\n    Fin_Situation = e_7_n_4,\n    Savings_Type = F4_4,\n    Insurance = ins2\n    )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(Tanz_filter,5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 Ã— 12\n  dist_name clustertype Gender Access_MobilePhone Access_Internet\n  <chr>     <chr>       <chr>  <chr>              <chr>          \n1 Misungwi  Rural       Female Yes                Yes            \n2 Missenyi  Rural       Female No                 No             \n3 Kyela     Urban       Male   Yes                No             \n4 Kongwa    Urban       Female Yes                No             \n5 Ilala     Urban       Male   Yes                No             \n# â„¹ 7 more variables: Access_Computer <chr>, Savings_Emerg <chr>,\n#   Fin_Situation <chr>, Savings_Type <chr>, Insurance <chr>,\n#   Household_weight <dbl>, population_wt <dbl>\n```\n\n\n:::\n:::\n\n\n## 3.5 Perform relational join\n\n\n::: {.cell}\n\n:::\n\n\n------------------------------------------------------------------------\n\n# 4 Exploratory Data Analysis (EDA)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}